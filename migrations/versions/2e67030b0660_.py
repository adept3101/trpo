"""empty message

Revision ID: 2e67030b0660
Revises: 12b21cdf47a5
Create Date: 2025-10-05 16:29:47.024650

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2e67030b0660'
down_revision: Union[str, Sequence[str], None] = '12b21cdf47a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('numver_acc', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.Column('currency', sa.Integer(), nullable=False),
    sa.Column('open_data', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('application',
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('application_data', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.employee_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('application_id', 'product_id', 'employee_id')
    )
    op.create_table('client_product',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('client_id', 'product_id')
    )
    op.create_table('passport',
    sa.Column('passport_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('series', sa.String(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('iss_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.PrimaryKeyConstraint('passport_id')
    )
    op.create_table('account_product',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('data_connect', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('transaction',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('transaction_data', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.account_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.alter_column('client', 'registr_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_client_client_id'), 'client', ['client_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_client_client_id'), table_name='client')
    op.alter_column('client', 'registr_date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_table('transaction')
    op.drop_table('account_product')
    op.drop_table('passport')
    op.drop_table('client_product')
    op.drop_table('application')
    op.drop_table('account')
    # ### end Alembic commands ###
